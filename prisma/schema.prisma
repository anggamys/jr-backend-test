// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  role      Role     @default(HELPER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  phone   String? // Menambahkan phone number, opsional
  address String? // Menambahkan address, opsional

  orders Order[]
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  price       Float
  stock       Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  orderItems OrderItem[]
}

model Order {
  id              Int         @id @default(autoincrement())
  userId          Int
  customerName    String
  customerPhone   String?
  customerAddress String?
  totalPrice      Float
  status          OrderStatus @default(PENDING)
  expiredAt       DateTime
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt

  user       User        @relation(fields: [userId], references: [id])
  orderItems OrderItem[]
}

model OrderItem {
  id        Int      @id @default(autoincrement())
  orderId   Int
  productId Int
  quantity  Int
  price     Float
  createdAt DateTime @default(now())

  order   Order   @relation(fields: [orderId], references: [id])
  product Product @relation(fields: [productId], references: [id])
}

enum Role {
  HELPER
  ADMIN
}

enum OrderStatus {
  PENDING
  DONE
  CANCELLED
}
